import java.util.*;

public class ATM {
    private String userName;
    private double balance;
    private List<String> transactionHistory;

    public ATM(String userName) {
        this.userName = userName;
        this.balance = 0.0;
        this.transactionHistory = new ArrayList<>();
    }

    // Deposit
    public void deposit(double amount) {
        if (amount <= 0) {
            System.out.println("‚ùå Invalid deposit amount.");
            return;
        }
        balance += amount;
        transactionHistory.add("Deposited: $" + amount);
        System.out.println("‚úÖ Successfully deposited $" + amount);
    }

    // Withdraw
    public void withdraw(double amount) {
        if (amount <= 0) {
            System.out.println("‚ùå Invalid withdrawal amount.");
        } else if (amount > balance) {
            System.out.println("‚ùå Insufficient balance.");
        } else {
            balance -= amount;
            transactionHistory.add("Withdrew: $" + amount);
            System.out.println("‚úÖ Successfully withdrew $" + amount);
        }
    }

    // Transfer
    public void transfer(ATM recipient, double amount) {
        if (amount <= 0) {
            System.out.println("‚ùå Invalid transfer amount.");
        } else if (amount > balance) {
            System.out.println("‚ùå Insufficient balance.");
        } else {
            this.balance -= amount;
            recipient.balance += amount;
            this.transactionHistory.add("Transferred: $" + amount + " to " + recipient.userName);
            recipient.transactionHistory.add("Received: $" + amount + " from " + this.userName);
            System.out.println("‚úÖ Transferred $" + amount + " to " + recipient.userName);
        }
    }

    // View Balance
    public void viewBalance() {
        System.out.println("üí∞ Current balance: $" + balance);
    }

    // View Transaction History
    public void viewTransactionHistory() {
        System.out.println("üìú Transaction History for " + userName + ":");
        if (transactionHistory.isEmpty()) {
            System.out.println("No transactions yet.");
        } else {
            for (String tx : transactionHistory) {
                System.out.println("- " + tx);
            }
        }
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        // Create two ATM users (for transfer demo)
        System.out.print("Enter your name: ");
        String userName = sc.nextLine();
        ATM user = new ATM(userName);

        ATM recipient = new ATM("JohnDoe"); // Dummy user for transfer

        int choice;
        do {
            System.out.println("\n====== ATM MENU ======");
            System.out.println("1. View Balance");
            System.out.println("2. Deposit");
            System.out.println("3. Withdraw");
            System.out.println("4. Transfer");
            System.out.println("5. View Transaction History");
            System.out.println("6. Quit");
            System.out.print("Enter your choice (1-6): ");
            choice = sc.nextInt();

            switch (choice) {
                case 1:
                    user.viewBalance();
                    break;
                case 2:
                    System.out.print("Enter amount to deposit: $");
                    double dep = sc.nextDouble();
                    user.deposit(dep);
                    break;
                case 3:
                    System.out.print("Enter amount to withdraw: $");
                    double wd = sc.nextDouble();
                    user.withdraw(wd);
                    break;
                case 4:
                    System.out.print("Enter amount to transfer to JohnDoe: $");
                    double tf = sc.nextDouble();
                    user.transfer(recipient, tf);
                    break;
                case 5:
                    user.viewTransactionHistory();
                    break;
                case 6:
                    System.out.println("üëã Thank you for using the ATM. Goodbye!");
                    break;
                default:
                    System.out.println("‚ùå Invalid choice. Try again.");
            }
        } while (choice != 6);

        sc.close();
    }
}
